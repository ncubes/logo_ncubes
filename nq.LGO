to comments
; n    vertices     edges
; 0    1            0
; 1    2            1
; 2    4            4
; 3    8           12
; 4   16           32
; 5   32           80
; 6   64          192
end

to cuben :n
if :n<2 [stop]
repeat 2 [push "lines :n   cuben :n-2
          push "lines :n-1 cuben :n-2 ]
make "temp []
until [(item 1 :lines)=:n-1] [ 
 if (item 1 :lines)=:n-2[
  repeat 2 [
   queue "temp :n-1 queue "temp :n 
  ]
 ]
 queue "temp (dequeue "lines)
 if and ((last :temp)=:n-2) (not (item 1 :lines)=:n-1) [
  repeat 2 [
   queue "temp :n-1 queue "temp :n 
  ]
 ]
]
show :n
show sentence reverse :lines reverse :temp
end

to ncube :n
make "lines []
cuben :n
end

Make ":lines [4 2 1 2 1 3 2 1 2 1 4 2 1 2 1 3 2 4 3 4 3 1 4 3 4 3 2 4 3 4 3 1]
Make "lines [5 3 1 2 1 2 4 1 2 1 2 3 1 2 1 2 4 6 3 1 2 1 2 4 1 2 1 2 3 1 2 1 2 4 5 3 1 2 1 2 4 1 2 1 2 3 1 2 1 2 4 6]
Make "list []
Make "list2 []
Make "temp [3 1 2 1 2 5 6 5 6 4 5 6 5 6 1 2 1 2 3 1 2 1 2 5 6 5 6 4]
Make "temp2 [1 3 4 3 4 2 3 4 3 4 1 3 4 3 4 2 3 1 2 1 2 4 1 2 1 2 3 1 2 1 2 4]
