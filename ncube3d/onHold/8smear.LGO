to aaa
setsc 0
make "timeClear 0
make "oldkey 0
make "append "False
make "inputKey 0 
make "theta 22.5
make "costheta cos :theta
make "sintheta sin :theta
make "n 8   
make "len 800 / SQRT :n
ncube :n    
genbasis :n  
getkeys      
draw
forever [rotate]
end

to cube :l :p
make "l1 :l
make "llist []
queue "llist :p
while [not :l1=[]] [queue "llist dequeue "l1]
make "l1 :l
queue "llist :p-1
while [not :l1=[]] [queue "llist dequeue "l1]
make "l1 :l
queue "llist -:p
while [not :l1=[]] [queue "llist dequeue "l1]
make "l1 :l
queue "llist 1-:p
queue "llist dequeue "l1
queue "llist :p queue "llist :p-1 queue "llist -:p queue "llist 1-:p
while [ not :l1=[] ] [
 make "x dequeue "l1 
 if (abs :x) = (abs :p-2)  [                                          
   queue "llist :p queue "llist :p-1 queue "llist -:p queue "llist 1-:p
   queue "llist :x 
   queue "llist :p queue "llist :p-1 queue "llist -:p queue "llist 1-:p]
 if not  (abs :x) = (abs :p-2) [ queue "llist :x]]
end

to draw
clearscreen
make "timeClear  :timeClear + 1
make "timeClear modulo :timeClear 20
make "red 255 - 10 * :timeClear
make "gre 10 * :timeClear
make "blu int :X
make "blu  modulo  :blu 256
 
setpencolor (list :red  :gre :blu)

make "CurrentPosition array 3   
for [i 1 3 1] [  setitem :i :CurrentPosition 0]
for [i 1 3 1] [~
 make "temp 0
 for [j 1 :n 1] [~
  make "index (list :j :i)
  make "temp :temp + mditem :index :basis ]
 setitem :i :CurrentPosition (-:temp / 2) ]
pu
ht
setxy item 1 :CurrentPosition item 2 :CurrentPosition 
show :CurrentPosition
pd
make "ll :llist
while [ not :ll = [] ] [~
 make "dimension dequeue "ll
 make "direction sign :dimension
 make "dimension abs :dimension
 for [i 1 2 1] [~
  make "Current item :i :CurrentPosition
  make "index (list :dimension :i)
  make "delta mditem :index :basis
  setitem  :i :CurrentPosition (:Current + ( :direction * :delta )) ]
 make "x3 item 1 :CurrentPosition
 make "y3 item 2 :CurrentPosition
 setxy :x3 :y3  
]
    
end

to genbasis :n
make "basis MDARRAY (list :n :n)  ; basis vectors for tracing out parallel projection of hypercube
for [i 1 :n 1] ~
 [ ~
  for [j 1 :n 1] ~
   [ ~
    mdsetitem (list :i :j) :basis 0  ~
   ] ~
  mdsetitem (list :i :i) :basis :len ) ~
 ]
end

to getkeys
(keyboardon [make "inputKey keyboardvalue ] [make "inputKey 0] )
setfocus [MSWLogo Screen]
end

to go
show [thinking2]
ncube 2
make "list2 :llist
show :list2
show [thinking4]
ncube 4
make "list4 :llist
show :list4
show [thinking6]
ncube 6
make "list6 :llist
show :list6
show [thinking8]
ncube 8
make "list8 :llist
show :list8
show [thinking10]
ncube 10
make "list10 :llist
show :list10
show [thinking12]
ncube 12
make "list12 :llist
show :list12
show [thunk!]
end

to ncube :k
make "k :k-2               ; subtract off the dimension of a square
if :k<0 [stop]             ; check the parameter to be legal
make "llist [2 1 -2 -1]      ; the line list for a square
make "d 2                  ; number of dimensions in a square
while [ not :k<2] [ make "d :d+2 make "k :k-2 cube :llist :d ] 
end

to rotate
;if :rotlist = [] [stop]
if :inputKey = 0 [stop]
;if :inputKey = :oldkey [stop]
make "oldkey :inputKey
if :inputKey = 90 [show :basis stop] ; 90 is Z
make "senseX bitand :inputKey 15
if :senseX = 0 [genbasis :n clearscreen draw]
if :senseX = 1 [polyview (gifsave "4d3dsolidMovie.gif 2 :append 0) make "append "True]
if :senseX < 2 [stop]
if :senseX > :n [stop]
;make "senseX random (2 * :n)
;if :senseX > :n [make "senseX 2]
;if :senseX < 2  [make "senseX 2]
for [i 1 :n 1] ~
 [ ~
  make "index1 (list :i 1) ~
  make "index2 (list :i :senseX) ~
  make "X mditem :index1 :basis ~
  make "Y mditem :index2 :basis ~
  mdsetitem :index1 :basis (:costheta * :X) + (:sintheta * :Y) ~
  mdsetitem :index2 :basis (:costheta * :Y) - (:sintheta * :X) ]
  show :basis
draw
end

Make "append "False
Make "basis {{-51.700560763786 -157.716101494947 -145.710678118655 -123.096988312782 -97.8755212378498 17.691940484956 -78.5849265493455 0} {42.6776695296637 200 -184.775906502257 -29.2893218813452 -27.0598050073098 -46.1939766255643 -17.6776695296637 0} {145.710678118655 0 108.239220029239 -100 -92.3879532511287 -157.716101494947 -60.3553390593274 0} {49.2956046680003 -65.3281482438188 -60.3553390593274 231.854270428182 -85.3755212378498 -69.2084447794515 -61.8402642561777 0} {64.5657162305399 -70.7106781186548 -65.3281482438188 -10.3553390593274 231.854270428182 -87.0427151796094 -71.5781482438188 0} {184.775906502257 0 0 0 0 200 -76.536686473018 0} {116.332037060955 -76.5366864730179 -70.7106781186548 -11.2085382291991 -10.3553390593274 -17.6776695296637 234.656404985482 0} {0 0 0 0 0 0 0 282.842712474619}}
Make "blu 0
Make "costheta 0.923879532511287
Make "current -72.5702943297279
Make "currentposition {-275.828525673142 85.1458071652195 209.320765006737}
Make "d 8
Make "delta -157.716101494947
Make "dimension 1
Make "direction -1
Make "gre 140
Make "index [1 2]
Make "index1 [8 1]
Make "index2 [8 7]
Make "inputkey 0
Make "l1 []
Make "len 282.842712474619
Make "ll []
Make "llist [8 6 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 5 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 -6 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 -5 4 6 5 -6 -5 2 1 -2 -1 3 2 1 -2 -1 6 5 -6 -5 -4 6 5 -6 -5 2 1 -2 -1 -3 2 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 1 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 -2 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 -1 7 6 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 5 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 -6 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 -5 4 6 5 -6 -5 2 1 -2 -1 3 2 1 -2 -1 6 5 -6 -5 -4 6 5 -6 -5 2 1 -2 -1 -3 2 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 1 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 -2 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 -1 -8 6 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 5 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 -6 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 -5 4 6 5 -6 -5 2 1 -2 -1 3 2 1 -2 -1 6 5 -6 -5 -4 6 5 -6 -5 2 1 -2 -1 -3 2 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 1 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 -2 6 5 -6 -5 4 6 5 -6 -5 3 6 5 -6 -5 -4 6 5 -6 -5 -3 -1 -7 6 8 7 -8 -7 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 5 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 8 7 -8 -7 -6 8 7 -8 -7 4 2 1 -2 -1 3 2 1 -2 -1 -4 2 1 -2 -1 -3 2 4 3 -4 -3 1 4 3 -4 -3 -2 4 3 -4 -3 -1 -5 4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 2 1 -2 -1 3 2 1 -2 -1 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 -4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 2 1 -2 -1 -3 2 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 3 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 -4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 -3 1 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 3 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 -4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 -3 -2 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 3 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 -4 8 7 -8 -7 6 8 7 -8 -7 5 8 7 -8 -7 -6 8 7 -8 -7 -5 -3 -1]
Make "n 8
Make "oldkey 55
Make "red 115
Make "sensex 7
Make "sintheta 0.38268343236509
Make "temp -418.641530013474
Make "theta 22.5
Make "timeclear 14
Make "x 0
Make "x3 -275.828525673142
Make "y 0
Make "y3 85.1458071652195
